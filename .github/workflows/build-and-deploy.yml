name: Build and Deploy to ECS

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/terraform-apply.yml'
      - '.github/workflows/update-ssm-params.yml'
  workflow_dispatch:  # 手動実行用

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 503561449641.dkr.ecr.ap-northeast-1.amazonaws.com
          ECR_REPOSITORY: ecr-api-3000
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd ./ecr-api-3000
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster api-3000-cluster --service api-3000-service --force-new-deployment

      - name: Monitor ECS deployment
        run: |
          aws ecs wait services-stable --cluster api-3000-cluster --services api-3000-service
          echo "Deployment completed successfully!"